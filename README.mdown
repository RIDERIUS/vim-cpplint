vim-cpplint
==========
`vim-cpplint` is a Vim plugin that runs the currently open file through
cpplint.py, a static syntax and style checker for C++ source code.


Installation
------------
Use [vim-pathogen](https://github.com/tpope/vim-pathogen) if you're not using
it already. Then, simply put the contents of this repository in your
`~/.vim/bundle` directory.


Usage
-----
1. Open a C++ file
2. Press `<F7>` to run `cpplint.py` on it

It shows the errors inside a quick fix window, which will allow your to quickly
jump to the error locations by simply pressing [Enter].


Attention
---------
If Error "FIle xxxx not found. please install it first", please reconfigure 
g:cpplint_cmd.

Or if you want to use another lint-like program, you also can change g:cpplint_cmd
to get it.

    let g:cpplint_cmd="[your_path]/cpplint.py"

Customization
-------------
If you don't want to use the `<F7>` key for cpplint-checking, simply remap it
to another key. It autodetects whether it has been remapped and won't register
the `<F7>` key if so. For example, to remap it to `<F3>` instead, use:

    autocmd FileType cpp imap <buffer> <F3> :call Cpplint()<CR>

If you want to add any flags for cpplint, change g:cpplint_cmd_options. For example, to add more detailed statistics, use:

    let g:cpplint_cmd_options = '"--counting=detailed"'

Tips
----

A tip might be to run the cpplint.py check every time you write a C++ file, to
enable this, add the following line to your `.vimrc` file (thanks
[Godefroid](http://github.com/gotcha)!):

    autocmd BufWritePost *.h,*.cpp call Cpplint()
